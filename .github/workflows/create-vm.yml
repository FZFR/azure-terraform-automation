name: Create VM

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Enter VM name, Default: myVM'
        required: false
      vm_size:
        description: 'Enter VM Size, Default: Standard_DS1_v2'
        required: false
      vm_publisher:
        description: 'Enter VM image, Default: Canonical'
        required: false
      vm_offer:
        description: 'Enter VM offer, Default: 0001-com-ubuntu-server-jammy'
        required: false
      vm_sku:
        description: 'Enter VM offer, Default: 22_04-lts-gen2'
        required: false
      vm_version:
        description: 'Enter VM offer, Default: latest'
        required: false


#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZ_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZ_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZ_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZ_CLIENT_SECRET }}"  

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan      
      run: terraform plan -out=tfplan
        
    # Save plan to artifacts  
    - name: Publish Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan      
                      
  configure-and-create-vm:
    runs-on: ubuntu-latest    
    needs: [terraform-plan]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
            
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: Configure Terraform
      run: terraform init

    - name: Download Terraform Plan
      uses: actions/download-artifact@v3
      with:
        name: tfplan

    - name: Apply deployment      
      run: terraform apply -auto-approve tfplan

     # Save tfstate to artifacts  
    - name: Publish Terraform tfstate
      uses: actions/upload-artifact@v3
      with:
        name: terraform.tfstate
        path: terraform.tfstate   
      
